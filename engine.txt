<?php require_once('Chandown.php'); session_start();


$title = '';
$description = "";
$banner = False;
$style = '';


/*
* TithaEngine vBETA2
* https://github.com/beikvar/TithaEngine
*
*   Copyright 2021 Beikvar
*
*   Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
*   You may obtain a copy of the License at
*
*       http://www.apache.org/licenses/LICENSE-2.0
*
*   Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*   See the License for the specific language governing permissions and limitations under the License.
*/



if(isset($_SESSION["user"]) && isset($_SESSION["pass"]) && isset($_SESSION["yep"])){
  if(file_exists("db/users/" . $_SESSION["user"] . ".json")){
    $UserInfo = json_decode(file_get_contents("db/users/" . $_SESSION["user"] . ".json"));
    if(password_verify($_SESSION["pass"], $UserInfo->{"pass"})){
      if(password_verify($_SESSION["user"].$_SESSION["pass"].$UserInfo->{"pass"}, $_SESSION["yep"])){
        $verified=true; $acctype=$UserInfo->{"type"};
      }else{die("<body style='background:black;color:black'>ur tring 2 hack?</body>");}
    }else{die("<body style='background:black;color:black'>ur tring 2 hack?</body>");}
  }else{die("<body style='background:black;color:black'>ur tring 2 hack?</body>");}
}

// Tools


/* Post ID generator */
function genID($n) {
  $chars="0123456789abcdefghijklmnopqrstuvwxyz";
  $id = ''; $thing=0;
  while($thing==0){
    for ($i=0; $i<$n; $i++) {
      $r = rand(0, strlen($chars)-1);
      $id .= $chars[$r];
    }
    if(strpos(file_get_contents("db/posts/index.txt"),"$id\n") === false){
      $thing=1;
    }
  }
  return $id;
}
function genUID($n){
  $id = genID($n);
  while(file_exists("db/posts/" . $id . ".json") == true){
    genID($n);
  };
  return $id;
}

/* Key generator */

function genKey($n) {
  $chars="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz;!#$?%:*,_.";
  $id = ''; $thing=0;
  while($thing==0){
    for ($i=0; $i<$n; $i++) {
      $r = rand(0, strlen($chars)-1);
      $id .= $chars[$r];
    }
    if(strpos(file_get_contents("db/posts/index.txt"),"$id\n") === false){
      $thing=1;
    }
  }
  return $id;
}

/* Graphics stuff */
function banner() {
  if($banner){
	$MessageArray = file_get_contents("db/banners/index.txt");
  $CurrMsg = explode("\n", $MessageArray);

	// Variable that ounts the number of banners avitable
	$count = count($CurrMsg);

	// Choose a random banner, open info file and show
  $Content = json_decode(file_get_contents("db/banners/" . $CurrMsg[rand(0, $count-1)] . ".json"));
  return '<div id="banner"><a href="' . $Content->{"link"} . '"><img src="' . $Content->{"url"} . '" alt=""></a></div>';
  }else{return "";}
}
function goHome() {
  return '<a href="?" style="color:black;text-decoration:none"><= <img style="text-align:center" src="img/logo.png" height="10px"></a>';
}
function notFound() {
  echo goHome() . "\n";
  echo '<div style="text-align:center"><img style="text-align:center" src="img/404.png" width="30%"><br><p>Not found</p></div>';
}

/* User */
function showUser(){
  if(isset($_SESSION["user"])){
    $info = json_decode(file_get_contents("db/users/$_SESSION[user].json"));
		if($info->{"type"} != 0){
			$ubdg = ' <img class="bdg" src="img/';
      if($info->{"type"} == 1){
        $aus = "Admin";
      }elseif($info->{"type"} == 2){
        $aus = "Mod";
      }elseif($info->{"type"} == 3){
        $aus = "Verificado";
      }
      $ubdg .= "$aus.png\" title=\"$aus\" alt=\"$aus\">";
		}else{$ubdg = "";}
		return $_SESSION["user"] . ' ' . $ubdg . '] [<a href="?logout">Log out</a>';
  }else{return "<a href='?auth'>Log in</a>";}
}




?><!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<link rel="icon" href="img/icon.png">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<link rel="stylesheet" href="styles.css">
<title><?= $title ?></title>
<style>
<?= $style ?>
</style>
</head>
<body class="bbs">
  <!--[<a href="?action=Remove%20Duplicates">Remove Duplicates</a>]<p>[<a href="index.php?action=Delete%20First">Delete First Message]</p>

	<p><a href="index.php?action=Delete%20Last"> Delete Last Message </a></p>-->
	<?php
	/*if(isset($_GET["action"])) {
		if((file_exists("db/posts/index.txt")) && (filesize("db/posts/index.txt") != 0)) {
			// A button has been clicked on and the file messages.txt exists with content.
			$MessageArray = file("db/posts/index.txt");
			switch($_GET["action"]) {
				case "Delete First":
				array_shift($MessageArray);
				break;
				case "Delete Last":
				array_pop($MessageArray);
				break;
				case "Delete Message":
					if(isset($_GET["message"])) {
            unlink("db/posts/$_GET[message].json");
						//array_splice($MessageArray, $_GET["messages"], 1);
					}
					break;
				case "Remove Duplicates":
				$MessageArray = array_unique($MessageArray);
				$MessageArray = array_values($MessageArray);
					break;

			} // End of switch


			if(count($MessageArray) > 0) {
				$NewMessages = implode($MessageArray);
				$MessageStore = fopen("db/posts/index.txt", "wb");
				// Check if the file is not accessible 
				if($MessageStore === FALSE) {
					echo "There was an error updating the message file!\n";
				}
				else {
					fwrite($MessageStore, $NewMessages);
					fclose($MessageStore);
				}
			/*}
			else {
				unlink("db/index.txt");
			}
		}
	}*/




  if(isset($_GET["post"])){
    // Post page
		if(isset($_GET["t"]) && file_exists("db/posts/$_GET[t].json")){
      $testi=json_decode(file_get_contents("db/posts/$_GET[t].json"));
      if($testi->{"res"}==""){
        $t=true;
      }else{
			  $t=false;
      }
		}else{$t=false;}
		if(isset($_POST["submit"])) {

      // Create ID
      $id = genUID(6);

			$Subject = stripslashes($_POST["subject"]);
			$Name = stripslashes($_POST["name"]);
			$Message = stripslashes($_POST["message"]);

			// HTMLfy and put the "anon" flair to some users
			$Subject = htmlentities($Subject);
      if($Name=="") {
        $Name = '"' . "anon" . '"';
      } else {
        $Name = '"' . htmlentities($Name) . '"';
      }
      $Message = htmlentities($Message);

      $Message = preg_replace("/\n/", "", $Message);
      $Message = preg_replace("/\r/", "<br>", $Message);

			// Create a variable that serves a single line of data for us to save to the file
			if($t){
				$res = '"' . $_GET["t"] . '"';
				$b_i = json_decode(file_get_contents("db/posts/" . $_GET["t"] . ".json"));
      }else{$res='false';}
      if(isset($verified)){$utype=$acctype;}else{$utype=0;}
      $key = password_hash($_POST["key"], PASSWORD_DEFAULT);
			$date = date(DATE_ATOM);
			$MessageRecord = "{\"res\":$res,\"subject\":\"$Subject\",\"date\":\"$date\",\"name\":$Name,\"utype\":$utype,\"msg\":\"$Message\",\"key\":\"$key\"}";

			// Create up the file index.txt and save the file data into a variable
			$DatabaseFile = fopen("db/posts/index.txt", "ab");
      $MessageFile = fopen("db/posts/$id.json", "w+");

			// Check to see if there are issues accessing that file. If so, then handle the error. If not, then post the message.

      // Save ID on Database
			if($DatabaseFile === FALSE) {
				echo "There was an error saving your message!\n";
			} else {
				fWrite($DatabaseFile, "\n$id");
				fclose($DatabaseFile);
				echo "Your message has been saved! \n";
			}

      // Save message on Database
      if($MessageFile === FALSE){
        echo "error";
			} else {
				fWrite($MessageFile, $MessageRecord);
				fclose($MessageFile);
			}

			if($t){header("location: ?t=" . $_GET["t"] . "#" . $id);}else{header("location: ?t=" . $id);}
		}
	?>

	<h1> Post New Message </h1>
	<hr/>
	<form action="?post<?php if($t){echo '&t=' . $_GET['t'];} ?>" method="POST">
		<label style="font-weight:bold" for="subject"> Subject: </label>
		<input type="text" name="subject"/> <br/>
		<label style="font-weight:bold" for="name"> Name: </label>
		<input type="text" name="name" /> <br/>
		<textarea id="message" name="message" rows="30" cols="60"><?php if($t){echo ">>$_GET[t]#\n\n";} ?></textarea><br/>
		<label style="font-weight:bold" for="key">Key: </label><input type="text" name="key" value="<?= genKey(8) ?>" /> <br/>
		Please, keep it in a safe space, it is obligatory to delete a post <br /> <br />
		<input type="submit" name="submit" value="Post Message" />
		<input type="reset" name="reset" value="Reset Form"/>
	</form>
	<hr/>
	<p><a href="index.php"> View Message </a>
<?php




  } elseif(isset($_GET["del"])){
    function del($id){
      $CurrMsg = explode("\n", file_get_contents("db/posts/index.txt"));
		  $count = count($CurrMsg);
      for($i = 0; $i < $count; ++$i) {
        // Open content (if it exists)
        if(file_exists("db/posts/" . $CurrMsg[$i] . ".json")){
          $Content = json_decode(file_get_contents("db/posts/" . $CurrMsg[$i] . ".json"));
      
          if(($CurrMsg[$i]== $id) || (isset($Content->{"res"}) && $Content->{"res"} == $id)){
            unlink("db/posts/" . $CurrMsg[$i] . ".json");
          }
		    }
      }
    }
    if(isset($_GET["p"]) && file_exists("db/posts/" . $_GET["p"] . ".json")){
      if(isset($_POST["key"])){
        $Content = json_decode(file_get_contents("db/posts/" . $_GET["p"] . ".json"));
        if(password_verify($_POST["key"], $Content->{"key"})) {
          del($_GET["p"]);
          echo "<h1>Post eliminado</h1>";
          $Content = json_decode(file_get_contents("db/posts/" . $_GET["p"] . ".json"));
          header("location: ?");
        }else{
          echo "<h1>Invalid key</h1>";
        }
      }elseif(isset($verified)){
        if($acctype == (1 || 2)){
          del($_GET["p"]);
          echo "<h1>Post eliminado</h1>";
          $Content = json_decode(file_get_contents("db/posts/" . $_GET["p"] . ".json"));
          header("location: ?");
        }
      }else{
        echo "<div style='text-align:center'><h2>Poné tu llave para eliminar tu post</h2><form action='?del&p=$_GET[p]' method='POST'><input type='password' name='key'><input type='submit'></form></div>";
      }
    }else{$t=false;}




  } elseif(isset($_GET["t"])) {
    // Thread page
if(!file_exists("db/posts/index.txt") || (filesize("db/posts/index.txt") == 0)) {
		echo "The are no things posted.</p>\n";
	} else {
		if(file_exists("db/posts/" . $_GET["t"] . ".json")){

		echo '   <div style="display:block;margin:0 0 10px 0">' . goHome() . ' <span style="float:right">[<a href="?post&t=' . $_GET["t"] . '">New respond</a>]</span></div>';
		$MessageArray = file_get_contents("db/posts/index.txt");
		echo "<div id=\"list\"> \n ";

    $CurrMsg = explode("\n", $MessageArray);

		// Variable that simply counts the number of items in the $MessageArray
		$count = count($CurrMsg);

    // Tests
    $fst=true;

		// For every message that array has, we will loop to create a new <div> element and create the content
		for($i = 0; $i < $count; ++$i) {
      // Open content (if it exists)
      if(file_exists("db/posts/" . $CurrMsg[$i] . ".json")){$Content = json_decode(file_get_contents("db/posts/" . $CurrMsg[$i] . ".json"));
      
      // Check if it is a post or a reply
      if(($CurrMsg[$i]== $_GET["t"]) || (isset($Content->{"res"}) && $Content->{"res"} == $_GET["t"])){
        // Show post
			  if($fst){echo "<div class=\"item\">\n";}else{echo "<div class=\"rta\">\n";}
			  if($Content->{"utype"} != 0){
			    $ubdg = ' <img class="bdg" src="img/';
          if($Content->{"utype"} == 1){
            $aus = "Admin";
          }elseif($Content->{"utype"} == 2){
            $aus = "Mod";
          }elseif($Content->{"utype"} == 3){
            $aus = "Verificado";
          }
          $ubdg .= "$aus.png\" title=\"$aus\" alt=\"$aus\">";
			  }else{$ubdg = "";}
        if(!($fst)){echo "<a id=\"$CurrMsg[$i]\" href=\"?del&p=$CurrMsg[$i]\">[X]</a>\n";}
			  echo "<span class=\"name\">" . $Content->{"name"} . $ubdg . "</span>\n";
        echo "<span class=\"subject\">" . $Content->{"subject"} . "</span>\n";
			  echo "<span class=\"date\">" . $Content->{"date"} . "</span>\n";
			  echo "<div class=\"msg\">" . \Slimdown::render($Content->{"msg"}) . "</div>";
			  if($fst){echo "<br><span class=\"subp\">[<a href=\"?del&p=$CurrMsg[$i]\">Delete</a>]</span>\n";}
			  echo "</div> <hr />\n";
        $fst=false;
      }
		}}
		echo"</div>\n";
		} else {notFound();}
	}




  } elseif(isset($_GET["auth"])){
        // Post page
		if(isset($_POST["submit"])) {

      if(file_exists("db/users/".$_POST["user"].".json")){
				$Content = json_decode(file_get_contents("db/users/".$_POST["user"].".json"));
				if(password_verify($_POST["pass"], $Content->{"pass"})) {
					$_SESSION["yep"] = password_hash($_POST["user"].$_POST["pass"].$Content->{"pass"}, PASSWORD_DEFAULT);
          $_SESSION["user"] = $_POST["user"];
          $_SESSION["pass"] = $_POST["pass"];
					header("location: ?");
				}else{
					echo "<h1>Invalid</h1>";
				}
      }
		}
	?>

	<h1> Verificate </h1>
  <p>Como administrador, moderador, o invitado especial</p>
	<hr/>
	<form action="?auth" method="POST">
		<label style="font-weight:bold" for="subject"> User: </label>
		<input type="text" name="user"/> <br/>
		<label style="font-weight:bold" for="name"> Password: </label>
		<input type="password" name="pass" /> <br/>
		<input type="submit" name="submit" value="Verificar" />
	</form>
	<hr/><?php




  } elseif(isset($_GET["logout"])){
    session_destroy();
    header("location: ?");




  } elseif(isset($_GET["reglas"])) {
    include "reglas.html";



  } else {
    // Board page

  $banner = banner();
  echo '<div id="bhome">' . $banner . '<h1>' . $title . '</h1><p>' . $description . '</p><h3>[<a href="?post">New thread</a>]</a></h3></div>';
  if(!file_exists("db/posts/index.txt") || (filesize("db/posts/index.txt") == 0)) {
		echo "The are no things posted.</p>\n";
	} else {
		$MessageArray = file_get_contents("db/posts/index.txt");
		echo "<div id=\"list\"> \n ";

    $CurrMsg = explode("\n", $MessageArray);

		// Variable that simply counts the number of items in the $MessageArray
		$count = count($CurrMsg);
    $s = $count-1;
    $num = 0;

		// For every message that array has, we will loop to create a new <div> element and create the content
		for($i = 0; $i < $count; ++$i) {
      // Open content (if it exists)
      if(file_exists("db/posts/" . $CurrMsg[$s] . ".json")){
      
      $Content = json_decode(file_get_contents("db/posts/" . $CurrMsg[$s] . ".json"));
      
      // Check if it is a post or a reply
      if(!($Content->{"res"})){
        // Show post
			  echo "<div class=\"item\">\n";
			  if($Content->{"utype"} != 0){
			    $ubdg = ' <img class="bdg" src="img/';
          if($Content->{"utype"} == 1){
            $aus = "Admin";
          }elseif($Content->{"utype"} == 2){
            $aus = "Mod";
          }elseif($Content->{"utype"} == 3){
            $aus = "Verificado";
          }
          $ubdg .= "$aus.png\" title=\"$aus\" alt=\"$aus\">";
			  }else{$ubdg = "";}
			  echo "<span class=\"name\">" . $Content->{"name"} . $ubdg . "</span>\n";
        echo "<span class=\"subject\">" . $Content->{"subject"} . "</span>\n";
			  echo "<span class=\"date\">" . $Content->{"date"} . "</span>\n";
			  echo "<div class=\"msg\">" . \Slimdown::render($Content->{"msg"}) . "</div>";
			  echo "<br><span class=\"subp\">[<a href=\"?t=$CurrMsg[$s]\">View Thread</a>] [<a href=\"?del&p=$CurrMsg[$s]\">Delete</a>]</span>\n";
			  echo "</div>\n";
        $num++;
      }
		}
    $s--;
    }
    if($num==0){echo '<h4 style="text-align:center">Este tablón est&aacute; vacío :-(</h4>';}
		echo"</div>\n";
	}
  }

	?>
<footer>
Using <a href="https://github.com/beikvar/TithaEngine">TithaEngine</a> + <a href="https://github.com/luqaska/TUniboard">TUniboard</a ><br />
<!--<br><br>Este sitio web sigue en desarrollo, solo los desarrolladores tienen derecho a públicar contenido aquí.-->
</footer>
</body>
</html>
